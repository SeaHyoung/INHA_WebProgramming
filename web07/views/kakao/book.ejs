<div>
    <h1 class="text-center my-5"><%=title%></h1>
    <div class="row">
        <!-- col-md-4 : 컬럼이 12칸 중에서 미들 해상도인 경우 4칸 사용 -->
        <form name="frm" class="col-md-4 mb-3">
            <div class="input-group">
                <input name="query" class="form-control" value="Node.js" />
                <button class="btn btn-primary">검색</button>
            </div>
        </form>
        <!-- <div class="col pt-2">
    <span id="total">1건</span>
    </div> -->
    </div>
    <hr />
    <div id="div_list"></div>
    <div class="text-center">
        <button id="prev" class="btn btn-primary btn-sm">이전</button>
        <span id="page" class="mx-3">1</span>
        <button id="next" class="btn btn-primary btn-sm">다음</button>
    </div>
    <script type="x-handlebars-template" id="temp_list">
        <table class="table">
            {{#each documents}}
                <tr>
                    <td><img src="{{funThumbnail thumbnail}}" width="50px"></td>
                    <td><div class="ellipsis">{{title}}</div></td>
                    <td>{{price}}</td>
                    <td>{{authors}}</td>
                    <td width="70"><%-include('modal_book.ejs')%></td>
                    <td width="70"><button class="btn btn-success btn-sm cart" book="{{strBook @this}}">카트</button></td>
                </tr>
            {{/each}}
        </table>
    </script>
    <script>
        Handlebars.registerHelper("fncImage", function (image) {
            if (image) {
                return image;
            } else {
                return "/images/no_image.png";
            }
        });
    </script>
    <script>
        Handlebars.registerHelper("strBook", function (book) {
            return JSON.stringify(book);
        });
    </script>
    <script>
        Handlebars.registerHelper("funThumbnail", function (thumbnail) {
            if (thumbnail) {
                return thumbnail;
            } else {
                return "/images/no_image.png";
            }
        });
    </script>
</div>

<script>
    let query = "자바";
    let size = 12;
    let page = 1;

    getList();

    $(frm).on("submit", function (e) {
        e.preventDefault();
        query = $(frm.query).val();
        if (query == "") {
            alert("검색어를 입력하세요!");
        } else {
            page = 1;
            getList();
        }
    });

    $("#div_list").on("click", "img", function () {
        location.href = "/kakao/book/info";
    });

    $("#next").on("click", function () {
        page++;
        getList();
    });
    $("#prev").on("click", function () {
        page--;
        getList();
    });
    //도서목록 함수
    function getList() {
        //카카오 API문서를 보면 url, query, Authorization등등 어떻게 넣어줘야 하는지 기술되어있음.
        // $는 jquery 딸깍
        $.ajax({
            //get은 카카오API문서에 호출방식이 get으로 적혀있기 때문.
            type: "get",
            url: "https://dapi.kakao.com/v3/search/book?target=title",
            data: { query: query, size: size, page }, //query 에는 검색어가 들어감
            headers: {
                Authorization: "KakaoAK 0b91218c084a28358b5d595792a6932d",
            },
            success: function (data) {
                //호출 성공시 실행.
                console.log(data);
                const temp = Handlebars.compile($("#temp_list").html());
                $("#div_list").html(temp(data));

                const last = Math.ceil(data.meta.pageable_count / size);
                $("#page").html(`${page}/${last}`);

                if (page == 1) $("#prev").attr("disabled", true);
                else $("#prev").attr("disabled", false);

                if (data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            },
        });
    }
</script>
